{"version":3,"sources":["./src/app/dvd/add-item/add-item.component.ts","./src/app/dvd/add-item/add-item.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dvd/list/item/item.component.ts","./src/app/dvd/list/item/item.component.html","./src/app/dvd/list/list.component.html","./src/app/dvd/list/list.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input } from '@angular/core';\n\nimport { Dvd } from '../dvd.model';\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.scss']\n})\nexport class AddItemComponent {\n  @Input() db!: Dvd[];\n  model: Dvd = this.getNewModel();\n  constructor() { }\n\n  onSubmit() {\n    this.db.push(this.model);\n    this.model = this.getNewModel();\n    return false;\n  }\n\n  getNewModel(): Dvd {\n    return {\n      title: \"\",\n      releaseDate: \"\",\n      rating: 1,\n      cost: 1,\n      director: \"\",\n      genre: \"\"\n    };\n  }\n}\n","<details>\n  <summary>Add Item</summary>\n  <form (ngSubmit)=\"onSubmit()\" #addForm=\"ngForm\">\n    <div>\n      <label>Title</label>\n      <input type=\"text\" required [(ngModel)]=\"model.title\" name=\"title\" />\n    </div>\n    <div>\n      <label>Release Date</label>\n      <input type=\"date\" required [(ngModel)]=\"model.releaseDate\" name=\"releaseDate\" />\n    </div>\n    <div>\n      <label>Personal Rating</label>\n      <input type=\"number\" required min=\"1\" max=\"10\" step=\"1\" [(ngModel)]=\"model.rating\" name=\"rating\" />\n    </div>\n    <div>\n      <label>DVD Cost (Â£)</label>\n      <input type=\"number\" required min=\"0\" [(ngModel)]=\"model.cost\" name=\"cost\" />\n    </div>\n    <div>\n      <label>Director</label>\n      <input type=\"text\" required [(ngModel)]=\"model.director\" name=\"director\" />\n    </div>\n    <div>\n      <label>Genre</label>\n      <input type=\"text\" required [(ngModel)]=\"model.genre\" name=\"genre\" />\n    </div>\n    <div>\n      <span></span>\n      <button type=\"submit\" [disabled]=\"addForm.invalid\">Add</button>\n    </div>\n  </form>\n</details>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { Dvd } from './dvd/dvd.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  db: Dvd[] = [] as Dvd[];\n}\n","<main>\n  <header>\n    <h1>DVD Collection: Angular Example</h1>\n  </header>\n  <app-add-item [db]=\"db\"></app-add-item>\n  <app-list [db]=\"db\"></app-list>\n</main>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './dvd/list/list.component';\nimport { AddItemComponent } from './dvd/add-item/add-item.component';\nimport { ItemComponent } from './dvd/list/item/item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    AddItemComponent,\n    ItemComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input } from '@angular/core';\nimport { Dvd } from '../../dvd.model';\n\n@Component({\n  selector: '[app-list-item]',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\nexport class ItemComponent {\n  @Input() dvd!: Dvd;\n\n  get releaseDate() {\n    return (new Date(this.dvd.releaseDate)).toLocaleDateString('en-GB')\n  }\n\n  constructor() {\n  }\n}\n","<td>{{ dvd.title }}</td>\n<td>{{ releaseDate }}</td>\n<td>{{ dvd.rating }}</td>\n<td>Â£{{ dvd.cost }}</td>\n<td>{{ dvd.director }}</td>\n<td>{{ dvd.genre }}</td>\n","<table>\n  <thead>\n    <th>Title</th>\n    <th>Release Date</th>\n    <th>Rating</th>\n    <th>Cost</th>\n    <th>Director</th>\n    <th>Genre</th>\n  </thead>\n  <tr app-list-item *ngFor=\"let dvd of db\" [dvd]=\"dvd\"></tr>\n  <tr *ngIf=\"!db.length\">\n    <td colspan=\"6\" class=\"empty-table\">The list is empty ðŸ˜¢</td>\n  </tr>\n</table>\n","import { Component, Input } from '@angular/core';\n\nimport { Dvd } from '../dvd.model';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent {\n  @Input() db!: Dvd[];\n  constructor() { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}